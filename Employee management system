
/* Design three classes: Employee, Work, and Salary. The Employee class has data members such as employee_id, name, and department. 
Create a class Work by inheriting the Employee class. The Work class adds data members representing the hours_worked for five different tasks.
 Derive the Salary class from the Work class, which calculates and stores the total_salary based on the hours worked and a fixed rate per
  hour for each task. Write an interactive program to model thisÂ relationship.*/
  
#include <iostream>
#include <string>
using namespace std;

class Employee
{
protected:
    int employee_id;
    string name;
    string department;

public:
    void setEmployeeDetails(int id, string empName, string dept)
    {
        employee_id = id;
        name = empName;
        department = dept;
    }

    void displayEmployeeDetails()
    {
        cout << "Employee ID: " << employee_id << endl;
        cout << "Name: " << name << endl;
        cout << "Department: " << department << endl;
    }
};

class Work : public Employee
{
protected:
    float hours_worked[5];

public:
    void setWorkDetails()
    {
        cout << "Enter hours worked for 5 tasks:\n";
        for (int i = 0; i < 5; ++i)
        {
            cout << "Task " << i + 1 << ": ";
            cin >> hours_worked[i];
        }
    }

    void displayWorkDetails()
    {
        cout << "Hours worked for tasks:\n";
        for (int i = 0; i < 5; ++i)
        {
            cout << "Task " << i + 1 << ": " << hours_worked[i] << " hours" << endl;
        }
    }
};

class Salary : public Work
{
private:
    float rate_per_hour[5];
    float total_salary;

public:
    Salary()
    {
        total_salary = 0.0;
        cout << "Enter rate per hour for 5 tasks:\n";
        for (int i = 0; i < 5; ++i)
        {
            cout << "Rate for Task " << i + 1 << ": ";
            cin >> rate_per_hour[i];
        }
    }

    void calculateSalary()
    {
        total_salary = 0.0;
        for (int i = 0; i < 5; ++i)
        {
            total_salary += hours_worked[i] * rate_per_hour[i];
        }
    }

    void displaySalary()
    {
        cout << "Total Salary: $" << total_salary << endl;
    }
};

int main()
{
    Salary emp1;

    int id;
    string name, department;

    cout << "Enter Employee Details:\n";
    cout << "Employee ID: ";
    cin >> id;
    cout << "Name: ";
    cin.ignore();
    getline(cin, name);
    cout << "Department: ";
    getline(cin, department);

    emp1.setEmployeeDetails(id, name, department);

    emp1.setWorkDetails();

    emp1.calculateSalary();

    cout << "\nEmployee Details:\n";
    emp1.displayEmployeeDetails();
    cout << "\nWork Details:\n";
    emp1.displayWorkDetails();
    cout << "\nSalary Details:\n";
    emp1.displaySalary();

    return 0;
}
